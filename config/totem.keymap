//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define Base        0
#define Nav         1
#define Sym         2
#define Fun         3
#define Game        4
#define Gameplus    5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        td_Macro_Net: td_Macro_Net {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MACRO_NET";
            #binding-cells = <0>;
            bindings = <&Macro_Net1>, <&Macro_Net2>;

            tapping-term-ms = <200>;
        };

        td_Refresh: td_Refresh {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_REFRESH";
            #binding-cells = <0>;
            bindings = <&kp LC(R)>, <&Mecro_Refresh>;
        };

        td_mail: td_mail {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MAIL";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(G))>, <&kp LA(LC(N))>;
        };

        td_chrome_newtab: td_chrome_newtab {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CHROME_NEWTAB";
            #binding-cells = <0>;
            bindings = <&kp LC(T)>, <&kp LC(LS(T))>;
        };

        over_task_q: over_task_q {
            compatible = "zmk,behavior-mod-morph";
            label = "OVER_TASK_Q";
            bindings = <&kp Q>, <&kp LS(LC(ESCAPE))>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        over_Up_i: over_Up_i {
            compatible = "zmk,behavior-mod-morph";
            label = "OVER_UP_I";
            bindings = <&kp I>, <&kp LS(UP_ARROW)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        over_Left_j: over_Left_j {
            compatible = "zmk,behavior-mod-morph";
            label = "OVER_LEFT_J";
            bindings = <&hm LALT J>, <&kp LS(LEFT_ARROW)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        over_Down_k: over_Down_k {
            compatible = "zmk,behavior-mod-morph";
            label = "OVER_DOWN_K";
            bindings = <&hm LEFT_WIN K>, <&kp LS(DOWN_ARROW)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        over_Right_l: over_Right_l {
            compatible = "zmk,behavior-mod-morph";
            label = "OVER_RIGHT_L";
            bindings = <&hm RCTRL L>, <&kp LS(RIGHT_ARROW)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <11 12>;
            layers = <0>;
        };

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 17>;
            layers = <0>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <19 18>;
        };

        Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <0>;
        };
    };

    macros {
        Macro_Net1: net_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ARROW &kp LEFT_ARROW &kp N0 &kp ENTER>;
            label = "NET_MACRO";
        };

        Macro_Net2: net_macro2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ARROW &kp N0 &kp N0 &kp ENTER>;
            label = "NET_MACRO2";
        };

        Mecro_Log: Mecro_Log {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp L &kp D &kp M &kp D &kp D &kp L>;
            label = "MECRO_LOG";
        };

        Mecro_Refresh: Mecro_Refresh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp LC(C) &kp LC(R)>;
            label = "MECRO_REFRESH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Totem {
            display-name = "Totem";
            bindings = <
           &over_task_q  &kp W        &kp E       &kp R        &kp T          &kp Y            &kp U         &over_Up_i     &kp O          &kp P
           &hm LCTRL A   &hm LCTRL S  &hm LWIN D  &hm LALT F   &kp G          &kp H            &over_Left_j  &over_Down_k   &over_Right_l  &hm RSHFT SEMICOLON
&kp LSHFT  &kp Z         &kp X        &kp C       &kp V        &kp B          &kp N            &kp M         &kp COMMA      &kp DOT        &kp SLASH            &kp RSHFT
                                      &lt 4 TAB   &lt 1 SPACE  &lt 2 ENTER    &lt 3 BACKSPACE  &kp SPACE     &kp LS(SPACE)
            >;
        };

        Function {
            display-name = "Function";
            bindings = <
           &kp F1  &kp F2   &kp F3   &kp F4   &kp K_MUTE           &trans          &trans     &trans     &trans             &trans
           &kp F5  &kp F6   &kp F7   &kp F8   &kp C_VOLUME_UP      &kp MINUS       &kp PLUS   &kp SQT    &kp DOUBLE_QUOTES  &kp COLON
&kp LSHFT  &kp F9  &kp F10  &kp F11  &kp F12  &kp C_VOLUME_DOWN    &kp UNDERSCORE  &kp EQUAL  &kp COMMA  &kp PERIOD         &kp SLASH  &kp RSHFT
                            &trans   &trans   &trans               &trans          &trans     &kp DOT
            >;
        };

        Numpad {
            display-name = "Numpad";
            bindings = <
           &kp TILDE  &kp LC(W)       &kp UP_ARROW    &td_Refresh      &td_chrome_newtab    &kp N7         &kp N8        &kp N9        &kp MINUS       &kp PLUS
           &kp LC(A)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LC(F)            &kp NUMBER_4   &kp N5        &kp NUMBER_6  &kp UNDERSCORE  &kp COLON
&kp LSHFT  &kp LC(Z)  &kp LC(X)       &kp LC(C)       &kp LC(V)        &kp C_AC_HOME        &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &kp COMMA       &kp SLASH  &kp EQUAL
                                      &Mecro_Log      &td_Macro_Net    &trans               &kp BACKSPACE  &kp N0        &kp PERIOD
            >;
        };

        Special {
            display-name = "Special";
            bindings = <
           &kp EXCLAMATION  &kp AT_SIGN  &kp HASH       &kp DOLLAR      &kp PERCENT             &kp CARET              &kp AMPERSAND    &kp UP_ARROW      &kp ASTERISK     &kp DOUBLE_QUOTES
           &kp TILDE        &trans       &trans         &trans          &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp LEFT_ARROW   &kp DOWN_ARROW    &kp RIGHT_ARROW  &kp SQT
&kp LSHFT  &kp GRAVE        &trans       &kp LESS_THAN  &kp LEFT_BRACE  &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp RIGHT_BRACE  &kp GREATER_THAN  &trans           &kp QUESTION       &kp RSHFT
                                         &kp LEFT_GUI   &kp SPACE       &kp ENTER               &trans                 &kp LEFT_ARROW   &kp RIGHT_ARROW
            >;
        };

        Shortcut {
            display-name = "Shortcut";
            bindings = <
                   &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(N5)           &trans  &trans  &trans  &trans  &trans
                   &kp LA(LC(A))     &kp LA(LC(S))     &kp LA(LC(D))     &kp LA(LC(F))     &td_mail             &trans  &trans  &trans  &trans  &trans
&kp LA(LC(LS(F)))  &kp Z             &kp LA(LC(X))     &kp LA(LC(C))     &kp LA(LC(V))     &kp LA(LC(B))        &trans  &trans  &trans  &trans  &trans  &trans
                                                       &trans            &kp LGUI          &kp LS(LA(LC(A)))    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
           &kp Q  &kp W  &kp F  &kp P  &kp B    &kp J  &kp L      &kp U      &kp Y    &kp SEMI
           &kp A  &kp R  &kp S  &kp T  &kp G    &kp M  &kp N      &kp E      &kp I    &kp O
&kp LSHFT  &kp Z  &kp X  &kp C  &kp D  &kp V    &kp K  &kp H      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &sk A  &kp A  &kp A    &kp A  &kp SPACE  &trans
            >;

            label = "콜맥DH";
        };
    };
};
